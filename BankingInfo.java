
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Banking_IS;

/**
 *
 * @author Saura
 */
import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.LinkedList;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

public class BankingInfo extends javax.swing.JFrame {

    /**
     * Creates new form MainWork
     */
    public BankingInfo() {
        initComponents();
        arrangeComboBox.setSelectedIndex(0);
        JTableHeader tableHeader = dataTable.getTableHeader();
        tableHeader.setFont(new Font("Arial", Font.BOLD, 15));
        tableHeader.setBackground(Color.decode("#1A374D"));
        tableHeader.setForeground(Color.decode("#1A374D"));
        UIManager.getDefaults().put("TableHeader.cellBorder", BorderFactory.createEmptyBorder(9,0,9,0));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menu = new javax.swing.JMenu();
        classgrp1 = new javax.swing.ButtonGroup();
        addFrame = new javax.swing.JFrame();
        addPanel = new javax.swing.JPanel();
        addBankName = new javax.swing.JLabel();
        addContact = new javax.swing.JLabel();
        addClasses = new javax.swing.JLabel();
        addInterestRate = new javax.swing.JLabel();
        addBankCategory = new javax.swing.JLabel();
        addComboBox = new javax.swing.JComboBox<>();
        addOk = new javax.swing.JButton();
        addTitleLabel = new javax.swing.JLabel();
        addCancelButton = new javax.swing.JButton();
        addClearBtn = new javax.swing.JButton();
        addRadioBtnA = new javax.swing.JRadioButton();
        addRadioBtnB = new javax.swing.JRadioButton();
        addRadioBtnC = new javax.swing.JRadioButton();
        txt_addBankName = new javax.swing.JTextField();
        txt_addContact = new javax.swing.JTextField();
        txt_addInterestRate = new javax.swing.JTextField();
        add_btnGroup = new javax.swing.ButtonGroup();
        updateFrame = new javax.swing.JFrame();
        updatePanel = new javax.swing.JPanel();
        updateSave = new javax.swing.JButton();
        checkInterestRate = new javax.swing.JCheckBox();
        checkClass = new javax.swing.JCheckBox();
        updateRadioBtnA = new javax.swing.JRadioButton();
        updateRadioBtnB = new javax.swing.JRadioButton();
        updateRadioBtnC = new javax.swing.JRadioButton();
        updateCategory = new javax.swing.JComboBox<>();
        checkCategory = new javax.swing.JCheckBox();
        checkBankName = new javax.swing.JCheckBox();
        checkContact = new javax.swing.JCheckBox();
        updateTitleLabel = new javax.swing.JLabel();
        cancelUpdateBtn = new javax.swing.JButton();
        updateInterestRate = new javax.swing.JTextField();
        updateContact = new javax.swing.JTextField();
        updateBankName = new javax.swing.JTextField();
        updateBtnGroup = new javax.swing.ButtonGroup();
        deleteFrame = new javax.swing.JFrame();
        deletePanel = new javax.swing.JPanel();
        deleteTitleLabel = new javax.swing.JLabel();
        deleteCancel = new javax.swing.JButton();
        deleteOk = new javax.swing.JButton();
        lbl_delBankName = new javax.swing.JLabel();
        lbl_delContact = new javax.swing.JLabel();
        lbl_delCategory = new javax.swing.JLabel();
        lbl_delClass = new javax.swing.JLabel();
        lbl_delRate = new javax.swing.JLabel();
        bankNameDelTxt = new javax.swing.JTextField();
        categoryDelTxt = new javax.swing.JTextField();
        classDelTxt = new javax.swing.JTextField();
        contactDelTxt = new javax.swing.JTextField();
        rateDelTxt = new javax.swing.JTextField();
        jSlider1 = new javax.swing.JSlider();
        mainPanel = new javax.swing.JPanel();
        scrollPane = new javax.swing.JScrollPane();
        dataTable = new javax.swing.JTable();
        updateBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        searchCategoryBtn = new javax.swing.JButton();
        arrangeLbl = new javax.swing.JLabel();
        arrangeComboBox = new javax.swing.JComboBox<>();
        titlePanel = new javax.swing.JPanel();
        titleLbl = new javax.swing.JLabel();
        searchRateBtn = new javax.swing.JButton();
        searchTxt = new javax.swing.JTextField();
        exitBtn = new javax.swing.JButton();
        addBtn = new javax.swing.JButton();
        copyrightLabel = new javax.swing.JLabel();
        searchCombo = new javax.swing.JComboBox<>();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openFileItem = new javax.swing.JMenuItem();
        exitFIleItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();

        menu.setText("jMenu3");

        addFrame.setBounds(new java.awt.Rectangle(100, 100, 380, 460));
        addFrame.setLocation(new java.awt.Point(650, 200));
        addFrame.setMinimumSize(new java.awt.Dimension(380, 460));
        addFrame.setPreferredSize(new java.awt.Dimension(380, 460));
        addFrame.setResizable(false);
        addFrame.setSize(new java.awt.Dimension(380, 460));

        addPanel.setBackground(new java.awt.Color(26, 55, 77));
        addPanel.setMinimumSize(new java.awt.Dimension(380, 435));
        addPanel.setPreferredSize(new java.awt.Dimension(380, 435));

        addBankName.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        addBankName.setForeground(new java.awt.Color(255, 255, 255));
        addBankName.setText("Bank name:");

        addContact.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        addContact.setForeground(new java.awt.Color(255, 255, 255));
        addContact.setText("Contacts:");

        addClasses.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        addClasses.setForeground(new java.awt.Color(255, 255, 255));
        addClasses.setText("Classes:");

        addInterestRate.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        addInterestRate.setForeground(new java.awt.Color(255, 255, 255));
        addInterestRate.setText(" Interest Rate:");

        addBankCategory.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        addBankCategory.setForeground(new java.awt.Color(255, 255, 255));
        addBankCategory.setText("Bank Cateogry:");

        addComboBox.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        addComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose below option", "Central Bank", "Commerical Bank", "Development Bank", "Investment Bank", "Agricultural Bank" }));

        addOk.setBackground(new java.awt.Color(255, 140, 4));
        addOk.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        addOk.setForeground(new java.awt.Color(255, 255, 255));
        addOk.setText("OK");
        addOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addOkActionPerformed(evt);
            }
        });

        addTitleLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addTitleLabel.setForeground(new java.awt.Color(255, 255, 255));
        addTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addTitleLabel.setText("ADDING INFORMATION");

        addCancelButton.setBackground(new java.awt.Color(255, 140, 4));
        addCancelButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        addCancelButton.setForeground(new java.awt.Color(255, 255, 255));
        addCancelButton.setText("Cancel");
        addCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCancelButtonActionPerformed(evt);
            }
        });

        addClearBtn.setBackground(new java.awt.Color(255, 140, 4));
        addClearBtn.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        addClearBtn.setForeground(new java.awt.Color(255, 255, 255));
        addClearBtn.setText("Clear");
        addClearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addClearBtnActionPerformed(evt);
            }
        });

        add_btnGroup.add(addRadioBtnA);
        addRadioBtnA.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        addRadioBtnA.setForeground(new java.awt.Color(255, 255, 255));
        addRadioBtnA.setText("A");

        add_btnGroup.add(addRadioBtnB);
        addRadioBtnB.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        addRadioBtnB.setForeground(new java.awt.Color(255, 255, 255));
        addRadioBtnB.setText("B");

        add_btnGroup.add(addRadioBtnC);
        addRadioBtnC.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        addRadioBtnC.setForeground(new java.awt.Color(255, 255, 255));
        addRadioBtnC.setText("C");

        txt_addBankName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_addBankName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_addBankNameActionPerformed(evt);
            }
        });
        txt_addBankName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_addBankNameKeyPressed(evt);
            }
        });

        txt_addContact.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txt_addInterestRate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout addPanelLayout = new javax.swing.GroupLayout(addPanel);
        addPanel.setLayout(addPanelLayout);
        addPanelLayout.setHorizontalGroup(
            addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addTitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(addPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addPanelLayout.createSequentialGroup()
                        .addComponent(addBankName)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(addPanelLayout.createSequentialGroup()
                        .addComponent(addClearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 101, Short.MAX_VALUE)
                        .addComponent(addCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addOk, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))
                    .addGroup(addPanelLayout.createSequentialGroup()
                        .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addBankCategory)
                            .addComponent(addClasses)
                            .addGroup(addPanelLayout.createSequentialGroup()
                                .addComponent(addRadioBtnA, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(addRadioBtnB, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(addRadioBtnC, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(168, 168, 168))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addPanelLayout.createSequentialGroup()
                        .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(addComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_addBankName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addPanelLayout.createSequentialGroup()
                                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addContact)
                                    .addComponent(txt_addContact, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(70, 70, 70)
                                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addInterestRate)
                                    .addComponent(txt_addInterestRate))))
                        .addGap(20, 20, 20))))
        );
        addPanelLayout.setVerticalGroup(
            addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPanelLayout.createSequentialGroup()
                .addComponent(addTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addBankName, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_addBankName, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addContact, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addInterestRate, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_addInterestRate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_addContact, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(addBankCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addClasses, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addRadioBtnA)
                    .addComponent(addRadioBtnB)
                    .addComponent(addRadioBtnC))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addOk, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addClearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );

        addRadioBtnA.setActionCommand("A");
        addRadioBtnB.setActionCommand("B");
        addRadioBtnC.setActionCommand("C");

        javax.swing.GroupLayout addFrameLayout = new javax.swing.GroupLayout(addFrame.getContentPane());
        addFrame.getContentPane().setLayout(addFrameLayout);
        addFrameLayout.setHorizontalGroup(
            addFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        addFrameLayout.setVerticalGroup(
            addFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
        );

        updateFrame.setBounds(new java.awt.Rectangle(100, 100, 500, 410));
        updateFrame.setLocation(new java.awt.Point(650, 250));
        updateFrame.setMinimumSize(new java.awt.Dimension(500, 410));
        updateFrame.setSize(new java.awt.Dimension(500, 410));

        updatePanel.setBackground(new java.awt.Color(26, 55, 77));

        updateSave.setBackground(new java.awt.Color(255, 140, 4));
        updateSave.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        updateSave.setForeground(new java.awt.Color(255, 255, 255));
        updateSave.setText("Save");
        updateSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateSaveActionPerformed(evt);
            }
        });

        checkInterestRate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        checkInterestRate.setForeground(new java.awt.Color(255, 255, 255));
        checkInterestRate.setText("Interest Rate:");
        checkInterestRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkInterestRateActionPerformed(evt);
            }
        });

        checkClass.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        checkClass.setForeground(new java.awt.Color(255, 255, 255));
        checkClass.setText("Class:");
        checkClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkClassActionPerformed(evt);
            }
        });

        updateBtnGroup.add(updateRadioBtnA);
        updateRadioBtnA.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        updateRadioBtnA.setForeground(new java.awt.Color(255, 255, 255));
        updateRadioBtnA.setText("A");
        updateRadioBtnA.setEnabled(false);

        updateBtnGroup.add(updateRadioBtnB);
        updateRadioBtnB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        updateRadioBtnB.setForeground(new java.awt.Color(255, 255, 255));
        updateRadioBtnB.setText("B");
        updateRadioBtnB.setEnabled(false);

        updateBtnGroup.add(updateRadioBtnC);
        updateRadioBtnC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        updateRadioBtnC.setForeground(new java.awt.Color(255, 255, 255));
        updateRadioBtnC.setText("C");
        updateRadioBtnC.setEnabled(false);

        updateCategory.setEditable(true);
        updateCategory.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        updateCategory.setForeground(new java.awt.Color(255, 255, 255));
        updateCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose below option", "Central Bank", "Commerical Bank", "Development Bank", "Investment Bank", "Agricultural Bank" }));
        updateCategory.setEnabled(false);

        checkCategory.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        checkCategory.setForeground(new java.awt.Color(255, 255, 255));
        checkCategory.setText("Category:");
        checkCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkCategoryActionPerformed(evt);
            }
        });

        checkBankName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        checkBankName.setForeground(new java.awt.Color(255, 255, 255));
        checkBankName.setText("Bank Name: ");
        checkBankName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBankNameActionPerformed(evt);
            }
        });

        checkContact.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        checkContact.setForeground(new java.awt.Color(255, 255, 255));
        checkContact.setText("Contact:");
        checkContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkContactActionPerformed(evt);
            }
        });

        updateTitleLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        updateTitleLabel.setForeground(new java.awt.Color(255, 255, 255));
        updateTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        updateTitleLabel.setText("UPDATING INFORMATION");

        cancelUpdateBtn.setBackground(new java.awt.Color(255, 140, 4));
        cancelUpdateBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cancelUpdateBtn.setForeground(new java.awt.Color(255, 255, 255));
        cancelUpdateBtn.setText("Cancel");
        cancelUpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelUpdateBtnActionPerformed(evt);
            }
        });

        updateInterestRate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        updateInterestRate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                updateInterestRateKeyPressed(evt);
            }
        });

        updateContact.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        updateContact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                updateContactKeyPressed(evt);
            }
        });

        updateBankName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        updateBankName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBankNameActionPerformed(evt);
            }
        });
        updateBankName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                updateBankNameKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout updatePanelLayout = new javax.swing.GroupLayout(updatePanel);
        updatePanel.setLayout(updatePanelLayout);
        updatePanelLayout.setHorizontalGroup(
            updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(updateTitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(updatePanelLayout.createSequentialGroup()
                .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(updatePanelLayout.createSequentialGroup()
                        .addGap(270, 270, 270)
                        .addComponent(updateRadioBtnC, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(updatePanelLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(updatePanelLayout.createSequentialGroup()
                                    .addComponent(updateSave, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(30, 30, 30)
                                    .addComponent(cancelUpdateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(updatePanelLayout.createSequentialGroup()
                                        .addComponent(checkCategory)
                                        .addGap(18, 18, 18)
                                        .addComponent(updateCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(updatePanelLayout.createSequentialGroup()
                                        .addComponent(checkClass)
                                        .addGap(31, 31, 31)
                                        .addComponent(updateRadioBtnA, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(29, 29, 29)
                                        .addComponent(updateRadioBtnB, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(updatePanelLayout.createSequentialGroup()
                                        .addComponent(checkBankName)
                                        .addGap(18, 18, 18)
                                        .addComponent(updateBankName, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(updatePanelLayout.createSequentialGroup()
                                .addComponent(checkContact)
                                .addGap(18, 18, 18)
                                .addComponent(updateContact, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(checkInterestRate)
                                .addGap(18, 18, 18)
                                .addComponent(updateInterestRate, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        updatePanelLayout.setVerticalGroup(
            updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, updatePanelLayout.createSequentialGroup()
                .addComponent(updateTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(checkBankName, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(updateBankName))
                .addGap(21, 21, 21)
                .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(updatePanelLayout.createSequentialGroup()
                        .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(checkInterestRate, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updateInterestRate, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 27, Short.MAX_VALUE))
                    .addGroup(updatePanelLayout.createSequentialGroup()
                        .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkContact, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updateContact, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkClass, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateRadioBtnA)
                    .addComponent(updateRadioBtnB)
                    .addComponent(updateRadioBtnC))
                .addGap(26, 26, 26)
                .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cancelUpdateBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(updateSave, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                .addGap(19, 19, 19))
        );

        updateRadioBtnA.setActionCommand("A");
        updateRadioBtnB.setActionCommand("B");
        updateRadioBtnC.setActionCommand("C");

        javax.swing.GroupLayout updateFrameLayout = new javax.swing.GroupLayout(updateFrame.getContentPane());
        updateFrame.getContentPane().setLayout(updateFrameLayout);
        updateFrameLayout.setHorizontalGroup(
            updateFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(updatePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        updateFrameLayout.setVerticalGroup(
            updateFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(updatePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        updateFrame.setSize(445,300);

        deleteFrame.setBounds(new java.awt.Rectangle(600, 250, 370, 430));
        deleteFrame.setLocation(new java.awt.Point(600, 250));
        deleteFrame.setMinimumSize(new java.awt.Dimension(370, 430));
        deleteFrame.setResizable(false);
        deleteFrame.setSize(new java.awt.Dimension(370, 430));

        deletePanel.setBackground(new java.awt.Color(26, 55, 77));

        deleteTitleLabel.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        deleteTitleLabel.setForeground(new java.awt.Color(255, 255, 255));
        deleteTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        deleteTitleLabel.setText("DELETING INFORMATION");

        deleteCancel.setBackground(new java.awt.Color(255, 140, 4));
        deleteCancel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        deleteCancel.setForeground(new java.awt.Color(255, 255, 255));
        deleteCancel.setText("Cancel");
        deleteCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteCancelActionPerformed(evt);
            }
        });

        deleteOk.setBackground(new java.awt.Color(255, 140, 4));
        deleteOk.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        deleteOk.setForeground(new java.awt.Color(255, 255, 255));
        deleteOk.setText("Delete");
        deleteOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteOkActionPerformed(evt);
            }
        });

        lbl_delBankName.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        lbl_delBankName.setForeground(new java.awt.Color(255, 255, 255));
        lbl_delBankName.setText("Bank name:");

        lbl_delContact.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        lbl_delContact.setForeground(new java.awt.Color(255, 255, 255));
        lbl_delContact.setText("Contacts:");

        lbl_delCategory.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        lbl_delCategory.setForeground(new java.awt.Color(255, 255, 255));
        lbl_delCategory.setText("Category:");

        lbl_delClass.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        lbl_delClass.setForeground(new java.awt.Color(255, 255, 255));
        lbl_delClass.setText("Class:");

        lbl_delRate.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        lbl_delRate.setForeground(new java.awt.Color(255, 255, 255));
        lbl_delRate.setText("Interest Rate:");

        bankNameDelTxt.setEditable(false);
        bankNameDelTxt.setBackground(new java.awt.Color(26, 55, 77));
        bankNameDelTxt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bankNameDelTxt.setForeground(new java.awt.Color(255, 255, 255));

        categoryDelTxt.setEditable(false);
        categoryDelTxt.setBackground(new java.awt.Color(26, 55, 77));
        categoryDelTxt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        categoryDelTxt.setForeground(new java.awt.Color(255, 255, 255));

        classDelTxt.setEditable(false);
        classDelTxt.setBackground(new java.awt.Color(26, 55, 77));
        classDelTxt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        classDelTxt.setForeground(new java.awt.Color(255, 255, 255));

        contactDelTxt.setEditable(false);
        contactDelTxt.setBackground(new java.awt.Color(26, 55, 77));
        contactDelTxt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        contactDelTxt.setForeground(new java.awt.Color(255, 255, 255));

        rateDelTxt.setEditable(false);
        rateDelTxt.setBackground(new java.awt.Color(26, 55, 77));
        rateDelTxt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rateDelTxt.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout deletePanelLayout = new javax.swing.GroupLayout(deletePanel);
        deletePanel.setLayout(deletePanelLayout);
        deletePanelLayout.setHorizontalGroup(
            deletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(deleteTitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(deletePanelLayout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addGroup(deletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(deletePanelLayout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(deleteOk, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(deleteCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(deletePanelLayout.createSequentialGroup()
                        .addComponent(lbl_delBankName)
                        .addGap(18, 18, 18)
                        .addComponent(bankNameDelTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(deletePanelLayout.createSequentialGroup()
                        .addComponent(lbl_delCategory)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(categoryDelTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, deletePanelLayout.createSequentialGroup()
                        .addComponent(lbl_delClass)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(classDelTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, deletePanelLayout.createSequentialGroup()
                        .addGroup(deletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_delRate)
                            .addComponent(lbl_delContact))
                        .addGroup(deletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(deletePanelLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(contactDelTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(deletePanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rateDelTxt)))))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        deletePanelLayout.setVerticalGroup(
            deletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deletePanelLayout.createSequentialGroup()
                .addComponent(deleteTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(deletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_delBankName)
                    .addComponent(bankNameDelTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(deletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_delContact)
                    .addComponent(contactDelTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(deletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(categoryDelTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_delCategory))
                .addGap(21, 21, 21)
                .addGroup(deletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_delClass)
                    .addComponent(classDelTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(deletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_delRate)
                    .addComponent(rateDelTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(deletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(deleteCancel, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(deleteOk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout deleteFrameLayout = new javax.swing.GroupLayout(deleteFrame.getContentPane());
        deleteFrame.getContentPane().setLayout(deleteFrameLayout);
        deleteFrameLayout.setHorizontalGroup(
            deleteFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, deleteFrameLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(deletePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        deleteFrameLayout.setVerticalGroup(
            deleteFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(deletePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        deleteFrame.setSize(400,300);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setBounds(new java.awt.Rectangle(300, 100, 846, 613));
        setLocation(new java.awt.Point(300, 100));
        setMinimumSize(new java.awt.Dimension(846, 613));
        setSize(new java.awt.Dimension(846, 613));

        mainPanel.setBackground(new java.awt.Color(204, 204, 204));

        dataTable.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        dataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Nepal Rastriya Bank", "01-4397854", "Central Bank", "B", "8.5"},
                {"Machhapuchchhre Bank", "01-9686756", "Commercial Bank", "A", "7.5"},
                {"Kumari Bank", "01-9545367", "Commercial Bank", "A", "10.0"},
                {"Nepal Infrastructure Bank", "01-4418539", "Development Bank", "B", "9"},
                {"Mukthinath Bank", "01-4525513", "Development Bank", "B", "11.9"},
                {"Krishi Bikash Bank", "01-4601748", "Agricultural Bank", "A", "6.7"},
                {"Nepal Investment Bank", "01-8931209", "Investment Bank", "B", "6.5"},
                {"Nabil Investment Bank", "01-4580012", "Investment Bank", "A", "8"},
                {"Aakash Capital Bank", "01-9000145", "Investment Bank", "B", "7.5"},
                {"Beed Agri Bank", "01-4590013", "Agricultural Bank", "C", "9.5"},
                {"Shangrila Bank ", "01-4421861", "Development Bank", "B", "6.8"},
                {"Himalayan Bank", "01-9857099", "Commercial Bank", "A", "9.12"}
            },
            new String [] {
                "Bank Name", "Contacts", "Category", "Class", "Interest rate"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        dataTable.setIntercellSpacing(new java.awt.Dimension(2, 1));
        dataTable.setRowHeight(35);
        dataTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        dataTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        dataTable.setShowGrid(true);
        scrollPane.setViewportView(dataTable);
        if (dataTable.getColumnModel().getColumnCount() > 0) {
            dataTable.getColumnModel().getColumn(0).setResizable(false);
            dataTable.getColumnModel().getColumn(0).setPreferredWidth(180);
            dataTable.getColumnModel().getColumn(1).setResizable(false);
            dataTable.getColumnModel().getColumn(2).setResizable(false);
            dataTable.getColumnModel().getColumn(2).setPreferredWidth(100);
            dataTable.getColumnModel().getColumn(3).setResizable(false);
            dataTable.getColumnModel().getColumn(3).setPreferredWidth(50);
            dataTable.getColumnModel().getColumn(4).setResizable(false);
            dataTable.getColumnModel().getColumn(4).setPreferredWidth(70);
        }

        updateBtn.setBackground(new java.awt.Color(26, 55, 77));
        updateBtn.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        updateBtn.setForeground(new java.awt.Color(255, 255, 255));
        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        deleteBtn.setBackground(new java.awt.Color(26, 55, 77));
        deleteBtn.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        deleteBtn.setForeground(new java.awt.Color(255, 255, 255));
        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        searchCategoryBtn.setBackground(new java.awt.Color(255, 140, 4));
        searchCategoryBtn.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        searchCategoryBtn.setForeground(new java.awt.Color(255, 255, 255));
        searchCategoryBtn.setText("Search");
        searchCategoryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchCategoryBtnActionPerformed(evt);
            }
        });

        arrangeLbl.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        arrangeLbl.setForeground(new java.awt.Color(26, 55, 77));
        arrangeLbl.setText("Arrange by:");

        arrangeComboBox.setBackground(new java.awt.Color(129, 178, 154));
        arrangeComboBox.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        arrangeComboBox.setForeground(new java.awt.Color(72, 164, 36));
        arrangeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ascending Order", "Descending Order" }));
        arrangeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arrangeComboBoxActionPerformed(evt);
            }
        });

        titlePanel.setBackground(new java.awt.Color(26, 55, 77));

        titleLbl.setBackground(new java.awt.Color(26, 55, 77));
        titleLbl.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        titleLbl.setForeground(new java.awt.Color(255, 255, 255));
        titleLbl.setText("  Banking Information System");

        searchRateBtn.setBackground(new java.awt.Color(255, 140, 4));
        searchRateBtn.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        searchRateBtn.setForeground(new java.awt.Color(255, 255, 255));
        searchRateBtn.setText("Search Bank");
        searchRateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchRateBtnActionPerformed(evt);
            }
        });

        searchTxt.setBackground(new java.awt.Color(64, 104, 130));
        searchTxt.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        searchTxt.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout titlePanelLayout = new javax.swing.GroupLayout(titlePanel);
        titlePanel.setLayout(titlePanelLayout);
        titlePanelLayout.setHorizontalGroup(
            titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(titlePanelLayout.createSequentialGroup()
                .addComponent(titleLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
                .addGap(33, 33, 33)
                .addComponent(searchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(searchRateBtn)
                .addGap(16, 16, 16))
        );
        titlePanelLayout.setVerticalGroup(
            titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(titlePanelLayout.createSequentialGroup()
                .addComponent(titleLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, titlePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchRateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17))
        );

        exitBtn.setBackground(new java.awt.Color(26, 55, 77));
        exitBtn.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        exitBtn.setForeground(new java.awt.Color(255, 255, 255));
        exitBtn.setText("Exit");
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });

        addBtn.setBackground(new java.awt.Color(26, 55, 77));
        addBtn.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        addBtn.setForeground(new java.awt.Color(255, 255, 255));
        addBtn.setText("ADD");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        copyrightLabel.setBackground(new java.awt.Color(204, 204, 204));
        copyrightLabel.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        copyrightLabel.setForeground(new java.awt.Color(26, 55, 77));
        copyrightLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        copyrightLabel.setText("© 2022 All Rights Reserved | Banking Information System");

        searchCombo.setBackground(new java.awt.Color(129, 178, 154));
        searchCombo.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        searchCombo.setForeground(new java.awt.Color(72, 164, 36));
        searchCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Option Below", "Central Bank", "Commercial Bank", "Development Bank", "Investment Bank", "Agricultural Bank" }));

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(titlePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPane)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(searchCategoryBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(arrangeLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(arrangeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(copyrightLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(exitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(deleteBtn)))))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(titlePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(arrangeLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchCategoryBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arrangeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 377, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(exitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(addBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(updateBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(13, 13, 13)
                .addComponent(copyrightLabel)
                .addContainerGap())
        );

        menuBar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        fileMenu.setText("File");

        openFileItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        openFileItem.setText("Open");
        openFileItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFileItemActionPerformed(evt);
            }
        });
        fileMenu.add(openFileItem);

        exitFIleItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        exitFIleItem.setText("Exit");
        exitFIleItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitFIleItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitFIleItem);

        menuBar.add(fileMenu);

        helpMenu.setText("Help");
        helpMenu.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                helpMenuMenuSelected(evt);
            }
        });
        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void arrangeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arrangeComboBoxActionPerformed
       
        if(arrangeComboBox.getSelectedIndex() == 0) {
            sort(0);
       }
       else{
           sort(1);
       }
    }//GEN-LAST:event_arrangeComboBoxActionPerformed
    //Sorting order by Bank Name.
    public void sort(int order) {
        // count the total number of rows with value
        int count = 0;
       for (int x = 0; x < dataTable.getRowCount(); x++){
           if (dataTable.getValueAt(x,0) != null){
               count++;
           }
       }
        // Creating a new array with size count.
        Object[] a = new Object[count];
        /**
         * Storing the table bankName value in array a
         * by traversing through table data
         */
        int rowCount = dataTable.getRowCount();
        for (int i = 0; i < rowCount; i++) {
            String bankName = (String) dataTable.getValueAt(i,0);
            if (bankName != null) {
                a[i] = bankName;
            }
        }
        for (int i = 0; i < a.length; i++) {
            int min = i;
            for (int j = i + 1; j < a.length; j++) {
                // for the string data we need to use: a[k].compareTo( a[min] ) > 0  
                if (order == 0) {
                    if (a[j].toString().compareTo(a[min].toString())<0) {
                        min = j;
                    }
                } else if (order == 1){
                    if (a[j].toString().compareTo(a[min].toString())>0) {
                        min = j;
                    }
                }
            }
            
            // swapping array values.
            Object temp = a[min];
            a[min] = a[i];
            a[i] = temp;
            
            // Swapping bankName values.
            String nameTemp = (String) dataTable.getValueAt(i, 0);
            dataTable.setValueAt(dataTable.getValueAt(min, 0), i, 0);
            dataTable.setValueAt(nameTemp, min, 0);

            // Swapping contact values.
            String contactTemp = (String) dataTable.getValueAt(i, 1);
            dataTable.setValueAt(dataTable.getValueAt(min, 1), i, 1);
            dataTable.setValueAt(contactTemp, min, 1);

            // Swapping category values.
            String categoryTemp = (String) dataTable.getValueAt(i, 2);
            dataTable.setValueAt(dataTable.getValueAt(min, 2), i, 2);
            dataTable.setValueAt(categoryTemp, min, 2);
            
            // Swapping class values.
            String clas = (String) dataTable.getValueAt(i, 3);
            dataTable.setValueAt(dataTable.getValueAt(min, 3), i, 3);
            dataTable.setValueAt(clas, min, 3);
            
            // Swapping interest values.
            String rate = (String) dataTable.getValueAt(i, 4);
            dataTable.setValueAt(dataTable.getValueAt(min, 4), i, 4);
            dataTable.setValueAt(rate, min, 4);
        }
    }
    
    // This method returns selected rows data of the table.
    public LinkedList selectedRowData() {
        int row = dataTable.getSelectedRow();
        for (int i = 0; i < dataTable.getColumnCount(); i++) {
            selectedRowData.add(dataTable.getValueAt(row, i));
        }
        return selectedRowData;
    }
    
    //check the duplication data.
    public boolean checkDuplication(String bankName, String contact){
        int rowCount = dataTable.getRowCount();
            int nextRow = 0;
            boolean emptyFlag = false;
            boolean duplicate = false;
        do{
                // getting values of column 0 and 1
                String a = (String) dataTable.getValueAt(nextRow, 0);
                String b = (String) dataTable.getValueAt(nextRow, 1);
                
                if(a == null || a.length() == 0) {
                    emptyFlag = true;
                } else {
                    // Checking for duplication of data in bankName's and contact's.
                    if(bankName.equals(a) || contact.equals(b)) {
                        duplicate = true;
                        break;
                       
                    } else {
                        nextRow++;
                    }
                }
                
            }
        // Check duplication
        while (nextRow < rowCount && !emptyFlag);
        return duplicate;
    }
    
    private boolean contactValidation(String contacts){
        return contacts.matches("[0-9]+([-][0-9]{1,9})?") ;  
    } 
    
    private void addOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addOkActionPerformed

        
        double interestRate;
        try {
            
        //retrive data from textField
        String bankName = txt_addContact.getText();
        String contact = txt_addContact.getText();
        boolean radioBtnA = addRadioBtnA.isSelected(),
                radioBtnB = addRadioBtnB.isSelected(),
                radioBtnC = addRadioBtnC.isSelected();
        //Checking for empty fields
        if (bankName.isEmpty() || contact.isEmpty() || addComboBox.getSelectedIndex() == 0 || txt_addInterestRate.getText().isEmpty() || (!radioBtnA && !radioBtnB && !radioBtnC)) {
            JOptionPane.showMessageDialog(addFrame, "Fill the form completely!!", "Empty fields found", JOptionPane.WARNING_MESSAGE);
            return;
       
        } else {
            if (checkDuplication(bankName, contact) == true){
                 JOptionPane.showMessageDialog(null, "Duplicate Data found!!",  "Alert", JOptionPane.ERROR_MESSAGE);
            }
            else{
                //Checking for valid data
                boolean invalidContact = false, invalidInterest = false;
                if (!contactValidation(txt_addContact.getText())) {
                    invalidContact = true;
            }
            if(!txt_addInterestRate.getText().matches("[0-9]+([.][0-9]{1,2})?")){
                invalidInterest = true;
            }
            if(invalidContact == true && invalidInterest == true){
                 JOptionPane.showMessageDialog(null,"Invalid data in interest and contact!", "Invalid input", JOptionPane.WARNING_MESSAGE);
                 return;
            }
            else if(invalidContact == true && invalidInterest == false){
                JOptionPane.showMessageDialog(null,"Invalid data in contact!",  "Invalid input", JOptionPane.WARNING_MESSAGE);
                return;
            }
            else  if(invalidContact == false && invalidInterest == true){
                      JOptionPane.showMessageDialog(null,"Invalid data in interest!",  "Invalidinput", JOptionPane.WARNING_MESSAGE);
                      return;
                  
            }
            
            String[] addData = {txt_addContact.getText(),
            txt_addContact.getText(),
            addComboBox.getSelectedItem().toString(),
            add_btnGroup.getSelection().getActionCommand(),
            txt_addInterestRate.getText()};
              
            // Adding data in table
            DefaultTableModel tbModel = (DefaultTableModel) dataTable.getModel();
            tbModel.addRow(addData);
            //close the frame
            addFrame.dispose();
            }
        }
        }
        // Handling exception 
        catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(addFrame, "Fill the form properly", "Invalid value", JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_addOkActionPerformed
    public LinkedList updatedData(int selectedRow) {
        //geting data from selected row
        String updatedBankName = updateBankName.getText();
        String updatedBankContact = updateContact.getText();
        String updatedBankCategory = updateCategory.getSelectedItem().toString();
        String updatedBankInterest = updateInterestRate.getText();
        String updatedBankClass = updateBtnGroup.getSelection().getActionCommand();
        
        //adding data in updatedValue linked list
        updatedValue.add(updatedBankName);
        updatedValue.add(updatedBankContact);
        updatedValue.add(updatedBankCategory);
        updatedValue.add(updatedBankClass);
        updatedValue.add(updatedBankInterest); 
        
        
        return updatedValue;
    }
    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // Setting disable fields
        updateBankName.setEnabled(false);
        updateContact.setEnabled(false);
        updateInterestRate.setEnabled(false);
        boolean check = false;
        try {
            
            int row = dataTable.getSelectedRow();
            //if no rows is selected in the table
            if(dataTable.getSelectedRow() <= dataTable.getRowCount()){
                selectedRowData();
                check = true;
   
            updateFrame.setVisible(true);
            
            //geting selected row data       
            String bankName = selectedRowData.get(0).toString();
            String contact = selectedRowData.get(1).toString();
            String category = selectedRowData.get(2).toString();
            char bankClass = selectedRowData.get(3).toString().charAt(0);
            String interest = selectedRowData.get(4).toString();
            
            //setting data in update form.
            updateBankName.setText(bankName);
            updateCategory.setSelectedItem(category);
            updateContact.setText(contact);
            updateInterestRate.setText(interest);
            updateRadioBtnA.setSelected(false);
            updateRadioBtnB.setSelected(false);
            updateRadioBtnC.setSelected(false);
            
            switch (bankClass) {
                case 'A':
                    updateRadioBtnA.setSelected(true);
                    break;
                case 'B':
                    updateRadioBtnB.setSelected(true);
                    break;
                case 'C':
                    updateRadioBtnC.setSelected(true);
                    break;
                default:
                    break;
            }
            //removing data from selectedData linked list
            selectedRowData.clear();  
            }
        }
        //handling exception 
        catch(Exception e) {
            //closing update frame
            updateFrame.dispose();
            
            //If row is not selected from the table.
            if(dataTable.getSelectedRow() == -1) {
                JOptionPane.showMessageDialog(null, "Select some row first!!", "Invalid", JOptionPane.WARNING_MESSAGE);
            } 
            //If empty row is selected.
            else {
                JOptionPane.showMessageDialog(null, "This row is empty!!You cannot update it.", "Invalid", JOptionPane.WARNING_MESSAGE);
                selectedRowData().clear();
            }
           
            
         
     }
    
    }//GEN-LAST:event_updateBtnActionPerformed

    private void checkBankNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBankNameActionPerformed
        //Check Is bank name is selected. 
        if (checkBankName.isSelected()) {
            updateBankName.setEnabled(true);
        } else {
            updateBankName.setEnabled(false);
        }
    }//GEN-LAST:event_checkBankNameActionPerformed
    private void checkClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkClassActionPerformed
        Enumeration<AbstractButton> buttons = updateBtnGroup.getElements();
        if (checkClass.isSelected()) {
            
            while (buttons.hasMoreElements()) {
                buttons.nextElement().setEnabled(true);
            }
        } else {
            while (buttons.hasMoreElements()) {
                buttons.nextElement().setEnabled(false);
            }
        }
    }//GEN-LAST:event_checkClassActionPerformed

    private void checkCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkCategoryActionPerformed
        // Enabling the textField 
        if (checkCategory.isSelected()) {
            updateCategory.setEnabled(true);
           
        } else {
            updateCategory.setEnabled(false);
        }
    }//GEN-LAST:event_checkCategoryActionPerformed

    private void checkInterestRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkInterestRateActionPerformed
        // Enabling the textField 
        if (checkInterestRate.isSelected()) {
            updateInterestRate.setEnabled(true);
        } else {
            updateInterestRate.setEnabled(false);
        }

    }//GEN-LAST:event_checkInterestRateActionPerformed

    private void checkContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkContactActionPerformed
        // Enabling the textField 
        if (checkContact.isSelected()) {
            updateContact.setEnabled(true);

        } else {
            updateContact.setEnabled(false);
        }
        
    }//GEN-LAST:event_checkContactActionPerformed

    // method to set the updated data in table
    private void updateSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateSaveActionPerformed
        int selectedRow = dataTable.getSelectedRow();
        int rowCount = dataTable.getRowCount();
        int nextRow = 0;
        boolean emptyFlag = false;
        do {
            //getting value of column 0 and column 1
            String bankName = (String) dataTable.getValueAt(nextRow, 0);
            String  contacts= (String) dataTable.getValueAt(nextRow, 1);
                
            if (bankName == null || bankName.length() == 0) {
                    emptyFlag = true;
                } else {
                    
                    //for duplication of data in code and title
                    if (updateBankName.getText().equals(bankName) || updateContact.getText().equals(contacts)) {
                        JOptionPane.showMessageDialog(rootPane, "Duplicate data found!!", "Alert", JOptionPane.WARNING_MESSAGE);
                        break;
                    } else {
                        nextRow++;
                    }
                }
            } while (nextRow <rowCount && !emptyFlag);
        
            // calling the updateData method
            updatedData(selectedRow);
            if(nextRow<rowCount) {
                if(emptyFlag) {
                    for(int i =0; i < dataTable.getColumnCount(); i++){
                        dataTable.setValueAt(updatedValue.get(i), selectedRow,i);
                        //Close updateFrame
                        updateFrame.dispose();
                
                    }    
                }
            }
        
        //Remove all data form updatedValue LinkedList
        updatedValue.clear();
        
    }//GEN-LAST:event_updateSaveActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        
        
        boolean flag = false;
        
        try {
            //geting row count of the table
            int deleteRow = dataTable.getSelectedRow();
            
            if(dataTable.getSelectedRow() <= dataTable.getRowCount()) {
                selectedRowData();
                flag = true;
                deleteFrame.setVisible(true);
                
                //getting the value of selected row from table
                String bankName = selectedRowData.get(0).toString();
                String bankContact = selectedRowData.get(1).toString();
                String bankCate = selectedRowData.get(2).toString();
                String bankClass = selectedRowData.get(3).toString();
                String bankInterest = selectedRowData.get(4).toString();
                
                //inserting the value of selected row into textfield
                bankNameDelTxt.setText(bankName);
                contactDelTxt.setText(bankContact);
                categoryDelTxt.setText(bankCate);
                classDelTxt.setText(bankClass);
                rateDelTxt.setText(bankInterest);
                selectedRowData.removeAll(selectedRowData);
            }
           
        }
        //Handling exceptions
        catch(Exception e) {
            deleteFrame.dispose();
            //If flag is false
            if(!flag) {
                // display no row selected message.
               JOptionPane.showMessageDialog(null, "Select some row first!!", "Invalid", JOptionPane.WARNING_MESSAGE);
            } else{
                JOptionPane.showMessageDialog(null, "This row is empty!!You cannot delete it.", "Invalid", JOptionPane.WARNING_MESSAGE);
                
                
            }
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void deleteCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteCancelActionPerformed
        // Closing the deleteFrame.
        deleteFrame.dispose();
    }//GEN-LAST:event_deleteCancelActionPerformed

    private void deleteOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteOkActionPerformed
        // TODO add your handling code here:
        int v = JOptionPane.showConfirmDialog(deleteFrame,"Are you sure you want to delete it?","Warning", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            if(v == JOptionPane.YES_OPTION){
                DefaultTableModel tbModel = (DefaultTableModel) dataTable.getModel();
                tbModel.removeRow(dataTable.getSelectedRow());
                deleteFrame.dispose();
                
            }

    }//GEN-LAST:event_deleteOkActionPerformed

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitBtnActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
        addFrame.setVisible(true);
    }//GEN-LAST:event_addBtnActionPerformed

    private void addCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCancelButtonActionPerformed
        // TODO add your handling code here:
        addFrame.dispose();
    }//GEN-LAST:event_addCancelButtonActionPerformed

    private void addClearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addClearBtnActionPerformed
        // clear all fileds from add Frame.
        txt_addContact.setText("");
        txt_addContact.setText("");
        txt_addInterestRate.setText("");
        addComboBox.setSelectedIndex(0);
        addRadioBtnA.setSelected(false);
        addRadioBtnB.setSelected(false);
        addRadioBtnC.setSelected(false);
    }//GEN-LAST:event_addClearBtnActionPerformed

    private void openFileItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFileItemActionPerformed
        final JFileChooser fc = new JFileChooser();
        int result = fc.showOpenDialog(null);
        if (result == fc.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
        
            try {
                BufferedReader br = new BufferedReader(new FileReader(file));
                DefaultTableModel model = (DefaultTableModel)dataTable.getModel();

                //get lines from text file
                Object[] tableLines = br.lines().toArray();

                //extract data from the lines of txt file
                for (Object tableLine : tableLines) {
                    String line = tableLine.toString().trim();
                    String[] dataRow = line.split(",");
                    //add data to the jTable model
                    String name = (String)dataRow[0];
                    System.out.println(name);
                    ArrayList <String>duplicateData = new ArrayList();
                    String contact = (String) dataRow[1];
                    if(!checkDuplication(name, contact)){
                        model.addRow(dataRow);
                        
                    }
                    else{
                        duplicateData.add(name);
                        String errorMessage = " already exists!! \n So it cannot be appended.";
                        JOptionPane.showMessageDialog(null,duplicateData + errorMessage);
                           
                    }
                } 
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "Error!!!", "Alert",JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "File is not seleted!", "ALERT", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_openFileItemActionPerformed

    // Function for contacts validation
    private void forContacts(String character) {
        // allow 0 to 9 before dot (.) && allow 0 to 9 in next two places after dot(.)
        if(character.matches("[0-9]+([-][0-9]{1,2})?")) {
            txt_addContact.setEditable(true);
            updateContact.setEditable(true);
        } else{
            JOptionPane.showMessageDialog(null, "Contacts cannot be string!!");
        }
    }
    
    public int binSearch(ArrayList<Double> a, int low, int high, double val){
        // this method is used for the searching the data
        
        int mid = (low+high)/2;
        if(low>high){
            // Return -1 if searched data is found
            return -1;
        }
        if(a.get(mid) == val){
            // Return index value of searched data
            return mid;
        }else if(val<a.get(mid)){
            // Return index value of searched data
            return binSearch(a, low, mid-1, val);
        }else{
            // Return index value of searched data
            return binSearch(a, mid+1, high, val);
        }
    }
    
    private void searchCategoryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchCategoryBtnActionPerformed
        try{
            // If the option is not selected
            if(searchCombo.getSelectedIndex() ==0){
                throw new IllegalArgumentException();
            }
            
        }catch(IllegalArgumentException e){
           JOptionPane.showMessageDialog(null,"First choose any Bank category!!!", "Alert", JOptionPane.WARNING_MESSAGE);
         return;
        }
         // Geting selected option from comboBox
        String searchedBy = searchCombo.getSelectedItem().toString();
        String bankCategory[] = new String [dataTable.getRowCount()];
        for(int i =0; i < dataTable.getRowCount(); i++){
            if(dataTable.getValueAt(i, 2) != null){
                bankCategory[i] = dataTable.getValueAt(i,2).toString();
           }
        }
        //Creating array list of String data type
        ArrayList <String> searchedResult = new ArrayList();
        
        for( int i = 0; i < bankCategory.length; i++){
            if(bankCategory[i] == searchedBy){
             String bankName = dataTable.getValueAt(i,0).toString();
             searchedResult.add(bankName);
            }
            
        }
        
        // Geting size of searchedResult array List
        int count = searchedResult.size();
        String verb = null;
        if(searchedResult.size() > 1){
            verb = "are";
        }
        else{
            verb = "is";
        }
        
        String output =  ("<HTML> There "+verb+" " + count+" "+searchCombo.getSelectedItem().toString()+ " which "+verb+": ");
        String output1 = null;
        for(String bankName : searchedResult){
            output1 = (output +"<br/>"+ bankName);
            output = output1;
        }
        // Displaying Message
        JOptionPane.showMessageDialog(null, output);
        
    }//GEN-LAST:event_searchCategoryBtnActionPerformed

  
    private void helpMenuMenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_helpMenuMenuSelected
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "<HTML> <H1>INSTRUCTIONS</H1> 1. You can only enter numerical value in interest rate. <br/> 2. You cannot add duplicate values in table. <br/> 3. You can search the number of banks available by category. <br/> 4. You cannot select empty row before updating or deleting. <br/> 5. If you enter other chatcter except String in bankName it will not take input.  ");
    }//GEN-LAST:event_helpMenuMenuSelected

    private void exitFIleItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitFIleItemActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitFIleItemActionPerformed

    private void searchRateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchRateBtnActionPerformed
        // checking for empty field
        if(searchTxt.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null,"Search field is empty!!", "Alert", JOptionPane.WARNING_MESSAGE);

        } else{
            // creating arrylist for each column
            ArrayList<String> bankName  = new ArrayList();
            ArrayList<String> contact = new ArrayList();
            ArrayList<String> category = new ArrayList();
            ArrayList<String> bankClass = new ArrayList();
            ArrayList<Double> interest = new ArrayList();

            int rowCount = dataTable.getRowCount();
            for (int i = 0; i < rowCount; i++) {
                // Geting data from each column
                String name = (String) dataTable.getValueAt(i, 0);
                String cont = (String) dataTable.getValueAt(i, 1);
                String cate = (String) dataTable.getValueAt(i, 2);
                String cls = (String) dataTable.getValueAt(i, 3);
                String inte = (String) dataTable.getValueAt(i, 4);

               // Adding data in arrylist of each column
                if(name != null && cont != null && cate !=null && cls !=null && inte !=null){
                    interest.add(Double.parseDouble(inte));
                    bankName.add(name);
                    contact.add(cont);
                    category.add(cate);
                    bankClass.add(cls);
                }
            }
            // Sorting interest rate
            for (int i = 0; i < interest.size(); i++) {
                int min = i;
                for (int j = i + 1; j < interest.size(); j++) {
                    // for the string data we need to use: a[k].compareTo( a[min] ) > 0
                    if (interest.get(j) < interest.get(min)) {
                        min = j;
                    }
                }

                // swapping array values
                double inteTemp = interest.get(min);
                interest.set(min, interest.get(i));
                interest.set(i, inteTemp);

                String nameTemp = bankName.get(min);
                bankName.set(min, bankName.get(i));
                bankName.set(i, nameTemp);

                String contTemp = contact.get(min);
                contact.set(min,contact.get(i));
                contact.set(i, contTemp);

                String classTemp = bankClass.get(min);
                bankClass.set(min, bankClass.get(i));
                bankClass.set(i, classTemp);

                String cateTemp = category.get(min);
                category.set(min, category.get(i));
                category.set(i, cateTemp);

            }
               
            // Checking data validation 
            if (searchTxt.getText().matches("[0-9]+([.][0-9]{1,2})?")) {
                searchTxt.setEditable(true);
            } else{
                JOptionPane.showMessageDialog(null, "You can only enter double value here.", "Invald input", JOptionPane.WARNING_MESSAGE);
                return;
            }
      
            double val = Double.parseDouble(searchTxt.getText());
            int low = 0;
            int high = interest.size();
            // Binary search
            int output = binSearch(interest, low, high, val);
            if(output == -1){
                JOptionPane.showMessageDialog(null, "Value not found", "Alert", JOptionPane.WARNING_MESSAGE);
                return;
            }else{
                // Geting searched values
                double getInterest = interest.get(output);
                String getName = bankName.get(output);
                String getContact = contact.get(output);
                String getCategory = category.get(output);
                String getClass = bankClass.get(output);
                JOptionPane.showMessageDialog(null, "The Bank with "+ "interest rate " + getInterest + " is: "+ "\nBANK NAME: " + getName + " \nCONTACTS: " + getContact + " \nCATEGORY: " + getCategory + "\nCLASS: " + getClass);
            }
            // Clearing the arrylists
            bankName.clear();
            interest.clear();
            contact.clear();
            category.clear();
            bankClass.clear();
        }

    }//GEN-LAST:event_searchRateBtnActionPerformed

    private void txt_addBankNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_addBankNameKeyPressed
        // checking validation for bank name while adding data in table
        char c = evt.getKeyChar();
        if (Character.isLetter(c) ||(c==evt.VK_BACK_SPACE)||(c==evt.VK_DELETE) || (c==evt.VK_SPACE) || (c==evt.VK_SHIFT)) {
            txt_addBankName.setEditable(true);

        } else {
            txt_addBankName.setEditable(false);

        }

    }//GEN-LAST:event_txt_addBankNameKeyPressed

    private void txt_addBankNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_addBankNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_addBankNameActionPerformed

    private void cancelUpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelUpdateBtnActionPerformed
        // TODO add your handling code here:
        updateFrame.dispose();
    }//GEN-LAST:event_cancelUpdateBtnActionPerformed

    private void updateBankNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_updateBankNameKeyPressed
        // checking validation for bank name while updating data in table
        char c = evt.getKeyChar();
        if (Character.isLetter(c) ||(c==evt.VK_BACK_SPACE)||(c==evt.VK_DELETE  || c == evt.VK_SPACE)) {
            updateBankName.setEditable(true);
        } else {
            updateBankName.setEditable(false);
        }
    }//GEN-LAST:event_updateBankNameKeyPressed

    private void updateContactKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_updateContactKeyPressed
        // checking validation for contact while updating data in table
        char c = evt.getKeyChar();
        if (Character.isDigit(c)||(c==evt.VK_BACK_SPACE)||(c==evt.VK_DELETE)) {
            updateContact.setEditable(true);
        } else if(Character.isLetter(c)) {
            updateContact.setEditable(false);
        }
    }//GEN-LAST:event_updateContactKeyPressed

    private void updateInterestRateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_updateInterestRateKeyPressed
        // checking validation for interest rate while updating data in table
        char c = evt.getKeyChar();
        if (Character.isDigit(c)||(c==evt.VK_BACK_SPACE)||(c==evt.VK_DELETE)) {
            updateInterestRate.setEditable(true);
        } else if(Character.isLetter(c)) {
            updateInterestRate.setEditable(false);
        }
    }//GEN-LAST:event_updateInterestRateKeyPressed

    private void updateBankNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBankNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateBankNameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
//        jLayeredPane1.setVisible(false);
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        try {
            
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BankingInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BankingInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BankingInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BankingInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BankingInfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addBankCategory;
    private javax.swing.JLabel addBankName;
    private javax.swing.JButton addBtn;
    private javax.swing.JButton addCancelButton;
    private javax.swing.JLabel addClasses;
    private javax.swing.JButton addClearBtn;
    private javax.swing.JComboBox<String> addComboBox;
    private javax.swing.JLabel addContact;
    private javax.swing.JFrame addFrame;
    private javax.swing.JLabel addInterestRate;
    private javax.swing.JButton addOk;
    private javax.swing.JPanel addPanel;
    private javax.swing.JRadioButton addRadioBtnA;
    private javax.swing.JRadioButton addRadioBtnB;
    private javax.swing.JRadioButton addRadioBtnC;
    private javax.swing.JLabel addTitleLabel;
    private javax.swing.ButtonGroup add_btnGroup;
    private javax.swing.JComboBox<String> arrangeComboBox;
    private javax.swing.JLabel arrangeLbl;
    private javax.swing.JTextField bankNameDelTxt;
    private javax.swing.JButton cancelUpdateBtn;
    private javax.swing.JTextField categoryDelTxt;
    private javax.swing.JCheckBox checkBankName;
    private javax.swing.JCheckBox checkCategory;
    private javax.swing.JCheckBox checkClass;
    private javax.swing.JCheckBox checkContact;
    private javax.swing.JCheckBox checkInterestRate;
    private javax.swing.JTextField classDelTxt;
    private javax.swing.ButtonGroup classgrp1;
    private javax.swing.JTextField contactDelTxt;
    private javax.swing.JLabel copyrightLabel;
    private javax.swing.JTable dataTable;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton deleteCancel;
    private javax.swing.JFrame deleteFrame;
    private javax.swing.JButton deleteOk;
    private javax.swing.JPanel deletePanel;
    private javax.swing.JLabel deleteTitleLabel;
    private javax.swing.JButton exitBtn;
    private javax.swing.JMenuItem exitFIleItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JLabel lbl_delBankName;
    private javax.swing.JLabel lbl_delCategory;
    private javax.swing.JLabel lbl_delClass;
    private javax.swing.JLabel lbl_delContact;
    private javax.swing.JLabel lbl_delRate;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenu menu;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem openFileItem;
    private javax.swing.JTextField rateDelTxt;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JButton searchCategoryBtn;
    private javax.swing.JComboBox<String> searchCombo;
    private javax.swing.JButton searchRateBtn;
    private javax.swing.JTextField searchTxt;
    private javax.swing.JLabel titleLbl;
    private javax.swing.JPanel titlePanel;
    private javax.swing.JTextField txt_addBankName;
    private javax.swing.JTextField txt_addContact;
    private javax.swing.JTextField txt_addInterestRate;
    private javax.swing.JTextField updateBankName;
    private javax.swing.JButton updateBtn;
    private javax.swing.ButtonGroup updateBtnGroup;
    private javax.swing.JComboBox<String> updateCategory;
    private javax.swing.JTextField updateContact;
    private javax.swing.JFrame updateFrame;
    private javax.swing.JTextField updateInterestRate;
    private javax.swing.JPanel updatePanel;
    private javax.swing.JRadioButton updateRadioBtnA;
    private javax.swing.JRadioButton updateRadioBtnB;
    private javax.swing.JRadioButton updateRadioBtnC;
    private javax.swing.JButton updateSave;
    private javax.swing.JLabel updateTitleLabel;
    // End of variables declaration//GEN-END:variables
LinkedList<Object> selectedRowData = new LinkedList();
LinkedList<Object> updatedValue = new LinkedList();
}